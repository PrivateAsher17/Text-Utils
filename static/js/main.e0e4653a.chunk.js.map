{"version":3,"sources":["logo.svg","components/Navbar.js","components/TextForm.js","components/About.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","style","color","href","title","type","id","onClick","aboutPage","aboutText","blackTheme","backgroundColor","class","greenTheme","purpleTheme","placeholder","toggleMode","htmlhtmlFor","TextForm","useState","Text","setText","heading","value","onChange","event","target","rows","disabled","length","newText","toUpperCase","showAlert","toLowerCase","slice","a1","split","a2","i","push","join","console","log","txt","document","getElementById","select","navigator","clipboard","writeText","filter","element","About","myStyle","Alert","height","alert","role","word","lower","charAt","capitalize","msg","defaultProps","App","setMode","setAlert","message","setTimeout","body","searchFunctionality","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.e0e4653a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${(props.mode!=='light')?'dark':'light'} bg-${(props.mode!=='light')?'dark':'light'}`}>\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" style={{color: (props.mode=='light')?'black':'white'}} href=\"#\">\r\n          {props.title}\r\n        </a>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link active\" style={{color: (props.mode=='light')?'black':'white'}} aria-current=\"page\" href=\"#\">\r\n                Home\r\n              </a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link\" onClick={props.aboutPage} style={{color: (props.mode=='light')?'black':'white'}} href=\"#\">\r\n                {props.aboutText}\r\n              </a>\r\n            </li>\r\n          </ul>\r\n          <button type=\"button\" onClick={props.blackTheme} style={{backgroundColor: 'black'}}\r\n class=\"btn btn-primary mx-2\">Black Theme</button>\r\n          <button type=\"button\" onClick={props.greenTheme} style={{backgroundColor: 'green'}} class=\"btn btn-primary\">Green Theme</button>\r\n          <button type=\"button\" onClick={props.purpleTheme} style={{backgroundColor: 'purple'}} class=\"btn btn-primary mx-2\">Purple Theme</button>\r\n          <form className=\"d-flex\">\r\n            <input\r\n              style={{backgroundColor : (props.mode==='light')?'white':'black',\r\n              color : props.mode==='light'?'black':'white'}}\r\n              className=\"form-control me-2\"\r\n              type=\"search\"\r\n              placeholder=\"Search Not Available\"\r\n              aria-label=\"Search\"\r\n            />\r\n            <button className=\"btn btn-primary\" type=\"submit\">\r\n              Search\r\n            </button>\r\n          </form>\r\n          <div className={`form-check form-switch mx-3 text-${props.mode==='light'?'dark':'light'}`}>\r\n            <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n            <label className=\"form-check-label\" htmlhtmlFor=\"flexSwitchCheckDefault\">{`${props.mode==='dark'?'Disable Dark':'Enable Dark'}Mode`}</label>\r\n        </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nNavbar.propTypes = { \r\n    title: PropTypes.string.isRequired, \r\n    aboutText: PropTypes.string.isRequired };\r\n\r\nNavbar.defaultProps = {\r\n    title: \"Enter Text Here\",\r\n    aboutText: \"About Text Here\"\r\n}","import React, {useState} from \"react\";\r\n\r\n\r\nexport default function TextForm(props) {\r\n\r\n    const handleUpClick = ()=>{\r\n        // console.log(\"Uppercase was clicked\" + Text);\r\n        let newText = Text.toUpperCase();\r\n        setText(newText)\r\n        props.showAlert(\"Converted to UpperCase\", \"success\")\r\n    }\r\n\r\n    const handleCopy = ()=>{\r\n      console.log(\"Text Copied!!!\");\r\n      var txt = document.getElementById('mybox')\r\n      txt.select()\r\n      navigator.clipboard.writeText(txt.value)\r\n      props.showAlert(\"Text Copied to Clipboard!!!\", \"success\")\r\n    }\r\n\r\n    const handleLoClick = ()=>{\r\n      let newText = Text.toLowerCase();\r\n      setText(newText)\r\n      props.showAlert(\"Converted to LowerCase\", \"success\")\r\n  }\r\n\r\n    const handleCapClick = ()=>{\r\n      let newText = Text[0].toUpperCase() + Text.slice(1).toLowerCase();\r\n      setText(newText)\r\n      props.showAlert(\"Capitalized first Word\", \"success\")\r\n  }\r\n\r\n  const handleCapEachClick = ()=>{\r\n    let a1 = Text.split(' ')\r\n    let a2 = []\r\n    for (let i=0; i<a1.length;i++){ a2.push(a1[i][0].toUpperCase() + a1[i].slice(1).toLowerCase())}\r\n    let newText = a2.join(' ')\r\n    setText(newText)\r\n    props.showAlert('First Remove Extra Spaces to Capitalize each word, Ignore if already did!', 'success')\r\n    // props.showAlert(\"Capitalized each word\", \"success\")\r\n    \r\n  }\r\n\r\n  const handleExtraSpaces = () =>{\r\n    let newText = Text.split(/[ ]+/)\r\n    setText(newText.join(\" \"))\r\n    props.showAlert(\"Extra Spaces Removed\", \"success\")\r\n  }\r\n\r\n    const handleClearClick = ()=>{\r\n      setText(\"\")\r\n      props.showAlert(\"Text Cleared\", \"success\")\r\n  }\r\n\r\n    const handleOnChange = (event)=>{\r\n      // console.log(\"something is added\");\r\n      setText(event.target.value)\r\n    }\r\n\r\n    const [Text, setText] = useState(\"\");\r\n  return (\r\n    <>\r\n    <div className=\"mb-3 my-3 container\">\r\n        <h1>{props.heading}</h1>\r\n      \r\n      <textarea style={{backgroundColor : (props.mode==='dark')?'#1b2244':(props.mode==='black')?'black':(props.mode==='green')?'green':(props.mode==='purple')?'purple':'white',\r\n                        color : props.mode==='light'?'black':'white'}} \r\n        className=\"form-control\" value={Text} placeholder=\"Type Here...\" onChange={handleOnChange} id=\"mybox\" rows=\"8\"\r\n      ></textarea>\r\n      <button disabled={Text.length===0} className='btn btn-primary my-2' onClick={handleUpClick} >Convert to Uppercase</button>\r\n      <button disabled={Text.length===0} className='btn btn-primary mx-2 my-2' onClick={handleLoClick} >Convert to Lowercase</button>\r\n      <button disabled={Text.length===0} className='btn btn-danger mx-2 my-2' onClick={handleClearClick} >Clear Text</button>\r\n      <button disabled={Text.length===0} className='btn btn-primary mx-2 my-2' onClick={handleCapClick} >Capitalize only first word</button>\r\n      <button disabled={Text.length===0} className='btn btn-primary mx-2 my-2' onClick={handleCapEachClick} >Capitalize Each Word</button>\r\n      <button disabled={Text.length===0} className='btn btn-primary mx-2 my-2' onClick={handleCopy} >Copy to Clipboard</button>\r\n      <button disabled={Text.length===0} className='btn btn-primary mx-2 my-2' onClick={handleExtraSpaces} >Remove Extra Spaces</button>\r\n\r\n    </div>\r\n    <div className='container'>\r\n      <h2>Your Text Summary</h2>\r\n      <p>{Text.split(' ').filter((element)=>{return element.length!==0}).length} words and {Text.length} characters</p>\r\n      <p>{0.008 * Text.split(' ').filter((element)=>{return element.length!==0}).length} Minutes read</p>\r\n      <h2>Preview</h2>\r\n      <p>{Text.length>0?Text:\"Nothing to Preview!!!\"}</p>\r\n    </div>\r\n    \r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function About() {\r\n    const [BtnText, setBtnText] = useState('Enable Dark Mode')\r\n    const [myStyle, setmyStyle] = useState(\r\n        {\r\n            color: 'black',\r\n            backgroundColor: 'white'\r\n        }\r\n    )\r\n    \r\n    const toggleState = ()=>{\r\n    if (myStyle.color === 'black'){\r\n        setmyStyle({\r\n            \r\n                color: 'white',\r\n                backgroundColor: 'black'\r\n\r\n        })\r\n        setBtnText('Enable Light Mode')\r\n    }\r\n    else{\r\n    setmyStyle({\r\n            \r\n        color: 'black',\r\n        backgroundColor: 'white'\r\n\r\n    })\r\n    setBtnText('Enable Dark Mode')\r\n    }\r\n}\r\n    \r\n    \r\n  return (\r\n    <div className=\"container my-3\" style={myStyle}>\r\n        <h1>About</h1>\r\n      <div className=\"accordion\" id=\"accordionExample\">\r\n        <div className=\"accordion-item\">\r\n          <h2 className=\"accordion-header\" id=\"headingOne\">\r\n            <button\r\n              className=\"accordion-button\"\r\n              type=\"button\"\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#collapseOne\"\r\n              aria-expanded=\"true\"\r\n              aria-controls=\"collapseOne\"\r\n              style={myStyle}\r\n            > <strong>\r\n              Analyze your Text\r\n              </strong>\r\n            </button>\r\n          </h2>\r\n          <div\r\n            id=\"collapseOne\"\r\n            className=\"accordion-collapse collapse show\"\r\n            aria-labelledby=\"headingOne\"\r\n            data-bs-parent=\"#accordionExample\"\r\n          >\r\n            <div className=\"accordion-body\" style={myStyle} >\r\n              TextUtils gives you a way to analyze your text quickly and efficiently.\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"accordion-item\">\r\n          <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n            <button\r\n                \r\n              className=\"accordion-button collapsed\"\r\n              type=\"button\"\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#collapseTwo\"\r\n              aria-expanded=\"false\"\r\n              aria-controls=\"collapseTwo\"\r\n              style={myStyle}\r\n            >\r\n              <strong>\r\n              Free to use\r\n              </strong>\r\n            </button>\r\n          </h2>\r\n          <div\r\n            id=\"collapseTwo\"\r\n            className=\"accordion-collapse collapse\"\r\n            aria-labelledby=\"headingTwo\"\r\n            data-bs-parent=\"#accordionExample\"\r\n          >\r\n            <div className=\"accordion-body\" style={myStyle}>\r\n              TextUtils is a free character counter tool that provides instant character count and word count statistics for a given text. TextUtils reports the number of words and characters. Thus it is suitable for writing text with word/character limit.\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"accordion-item\">\r\n          <h2 className=\"accordion-header\" id=\"headingThree\">\r\n            <button\r\n              className=\"accordion-button collapsed\"\r\n              type=\"button\"\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#collapseThree\"\r\n              aria-expanded=\"false\"\r\n              aria-controls=\"collapseThree\"\r\n              style={myStyle}\r\n            >\r\n              <strong>Browser Compatible</strong>\r\n            </button>\r\n          </h2>\r\n          <div\r\n            id=\"collapseThree\"\r\n            className=\"accordion-collapse collapse\"\r\n            aria-labelledby=\"headingThree\"\r\n            data-bs-parent=\"#accordionExample\"\r\n          >\r\n            <div className=\"accordion-body\" style={myStyle}>\r\n              This word counter software works in any web browsers such as Chrome, Firefox, Internet Explorer, Safari, Opera. It suits to count characters in facebook, blog, books, excel document, pdf document, essays, etc.\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* <button onClick={toggleState} className='btn btn-primary my-3'>{BtnText}</button> */}\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    const capitalize=(word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1)\r\n    }\r\n    return (\r\n        <div style={{height:'50px'}}>\r\n        {props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n            <strong>{capitalize(props.alert.type)} </strong> : {props.alert.msg} \r\n        </div>}\r\n        </div>\r\n            \r\n        \r\n    )\r\n}\r\n","import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\nimport About from \"./components/About\";\nimport React, { useState } from 'react'\nimport Alert from \"./components/Alert\";\n\n\nfunction App() {\n  const [mode, setMode] = useState('light')\n  const [alert, setAlert] = useState(null)\n  const showAlert=(message, type)=>{\n      setAlert({\n        msg: message,\n        type: type\n      })\n      setTimeout(() => {\n        setAlert(null)\n      }, 2000);\n  }\n\n  const toggleMode=()=>{\n    if (mode!=='dark'){\n      setMode('dark')\n      document.body.style.backgroundColor = '#1b2244'\n      document.body.style.color = 'white'\n      showAlert('DarkMode is on', 'success')\n    }\n    else{\n      setMode('light')\n      document.body.style.backgroundColor = 'white'\n      document.body.style.color = 'black'\n      showAlert('DarkMode is off', 'success')\n    }\n  }\n\n  const blackTheme=()=>{\n      if (mode!=='black'){\n        setMode('black')\n        document.body.style.backgroundColor = 'black'\n        document.body.style.color = 'white'\n        showAlert('BlackTheme is applied', 'success')\n      }\n      else{\n        setMode('light')\n        document.body.style.backgroundColor = 'white'\n        document.body.style.color = 'black'\n        showAlert('BlackTheme is off', 'success')\n      }\n      \n    }\n\n    const greenTheme=()=>{if (mode!=='green'){\n      setMode('green')\n      document.body.style.backgroundColor = 'green'\n      document.body.style.color = 'white'\n      showAlert('GreenTheme is applied', 'success')\n    }\n    else{\n      setMode('light')\n      document.body.style.backgroundColor = 'white'\n      document.body.style.color = 'black'\n      showAlert('GreenTheme is off', 'success')\n    }\n    }\n\n    const searchFunctionality=()=>{\n      showAlert('Search Functionality is not available right now, stay tuned!!!','success')\n    }\n\n    const purpleTheme=()=>{if (mode!=='purple'){\n      setMode('purple')\n      document.body.style.backgroundColor = 'purple'\n      document.body.style.color = 'white'\n      showAlert('PurpleTheme is applied', 'success')\n    }\n    else{\n      setMode('light')\n      document.body.style.backgroundColor = 'white'\n      document.body.style.color = 'black'\n      showAlert('PurpleTheme is off', 'success')\n    }\n    }\n\n    const aboutPage=()=>{\n      showAlert('Scroll Down to see About Page','success')\n    }\n\n  \n\n  return (\n    <>\n    {/* <Router> */}\n      <Navbar title=\"TextUtilsBlog\" aboutText=\"About TextUtils\" toggleMode={toggleMode} mode={mode} blackTheme={blackTheme} greenTheme={greenTheme} purpleTheme={purpleTheme} aboutPage={aboutPage} searchFunctionality={searchFunctionality} />\n      <Alert alert={alert} />\n      {/* <Switch>\n          <Route exact path=\"/about\">\n            <About />\n          </Route>\n          \n          <Route exact path=\"/\"> */}\n          <TextForm heading=\"Try TextUtils - Word Counter, Character Counter, Remove Extra Spaces\" mode={mode} showAlert={showAlert} />\n          <br></br>\n          <About />\n          {/* </Route>\n        </Switch> */}\n      {/* <TextForm heading=\"Enter Your Text Here to Analyze...\" mode={mode} showAlert={showAlert} /> */}\n      {/* <About/> */}\n      {/* </Router> */}\n      </>\n  );\n  \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}