{"version":3,"sources":["logo.svg","components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","style","color","href","title","type","id","aboutText","onClick","blackTheme","backgroundColor","class","greenTheme","purpleTheme","placeholder","toggleMode","htmlhtmlFor","TextForm","useState","Text","setText","heading","value","onChange","event","target","rows","newText","toUpperCase","showAlert","toLowerCase","slice","a1","split","a2","i","length","push","join","console","log","txt","document","getElementById","select","navigator","clipboard","writeText","Alert","alert","role","word","lower","charAt","capitalize","msg","defaultProps","App","setMode","setAlert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.ba46f7a9.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${(props.mode!=='light')?'dark':'light'} bg-${(props.mode!=='light')?'dark':'light'}`}>\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" style={{color: (props.mode=='light')?'black':'white'}} href=\"#\">\r\n          {props.title}\r\n        </a>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link active\" style={{color: (props.mode=='light')?'black':'white'}} aria-current=\"page\" href=\"#\">\r\n                Home\r\n              </a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link\" style={{color: (props.mode=='light')?'black':'white'}} href=\"#\">\r\n                {props.aboutText}\r\n              </a>\r\n            </li>\r\n          </ul>\r\n          <button type=\"button\" onClick={props.blackTheme} style={{backgroundColor: 'black'}}\r\n class=\"btn btn-primary mx-2\">Black Theme</button>\r\n          <button type=\"button\" onClick={props.greenTheme} style={{backgroundColor: 'green'}} class=\"btn btn-primary\">Green Theme</button>\r\n          <button type=\"button\" onClick={props.purpleTheme} style={{backgroundColor: 'purple'}} class=\"btn btn-primary mx-2\">Purple Theme</button>\r\n          <form className=\"d-flex\">\r\n            <input\r\n              style={{backgroundColor : (props.mode==='light')?'white':'black',\r\n              color : props.mode==='light'?'black':'white'}}\r\n              className=\"form-control me-2\"\r\n              type=\"search\"\r\n              placeholder=\"Search\"\r\n              aria-label=\"Search\"\r\n            />\r\n            <button className=\"btn btn-primary\" type=\"submit\">\r\n              Search\r\n            </button>\r\n          </form>\r\n          <div className={`form-check form-switch mx-3 text-${props.mode==='light'?'dark':'light'}`}>\r\n            <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n            <label className=\"form-check-label\" htmlhtmlFor=\"flexSwitchCheckDefault\">{`${props.mode==='dark'?'Disable Dark':'Enable Dark'}Mode`}</label>\r\n        </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nNavbar.propTypes = { \r\n    title: PropTypes.string.isRequired, \r\n    aboutText: PropTypes.string.isRequired };\r\n\r\nNavbar.defaultProps = {\r\n    title: \"Enter Text Here\",\r\n    aboutText: \"About Text Here\"\r\n}","import React, {useState} from \"react\";\r\n\r\n\r\nexport default function TextForm(props) {\r\n\r\n    const handleUpClick = ()=>{\r\n        // console.log(\"Uppercase was clicked\" + Text);\r\n        let newText = Text.toUpperCase();\r\n        setText(newText)\r\n        props.showAlert(\"Converted to UpperCase\", \"success\")\r\n    }\r\n\r\n    const handleCopy = ()=>{\r\n      console.log(\"Text Copied!!!\");\r\n      var txt = document.getElementById('mybox')\r\n      txt.select()\r\n      navigator.clipboard.writeText(txt.value)\r\n      props.showAlert(\"Text Copied to Clipboard!!!\", \"success\")\r\n    }\r\n\r\n    const handleLoClick = ()=>{\r\n      let newText = Text.toLowerCase();\r\n      setText(newText)\r\n      props.showAlert(\"Converted to LowerCase\", \"success\")\r\n  }\r\n\r\n    const handleCapClick = ()=>{\r\n      let newText = Text[0].toUpperCase() + Text.slice(1).toLowerCase();\r\n      setText(newText)\r\n      props.showAlert(\"Capitalized first Word\", \"success\")\r\n  }\r\n\r\n  const handleCapEachClick = ()=>{\r\n    let a1 = Text.split(' ')\r\n    let a2 = []\r\n    for (let i=0; i<a1.length;i++){ a2.push(a1[i][0].toUpperCase() + a1[i].slice(1).toLowerCase())}\r\n    let newText = a2.join(' ')\r\n    setText(newText)\r\n    props.showAlert(\"Capitalized each word\", \"success\")\r\n  }\r\n\r\n  const handleExtraSpaces = () =>{\r\n    let newText = Text.split(/[ ]+/)\r\n    setText(newText.join(\" \"))\r\n    props.showAlert(\"Extra Spaces Removed\", \"success\")\r\n  }\r\n\r\n    const handleClearClick = ()=>{\r\n      setText(\"\")\r\n      props.showAlert(\"Text Cleared\", \"success\")\r\n  }\r\n\r\n    const handleOnChange = (event)=>{\r\n      // console.log(\"something is added\");\r\n      setText(event.target.value)\r\n    }\r\n\r\n    const [Text, setText] = useState(\"\");\r\n  return (\r\n    <>\r\n    <div className=\"mb-3 my-3 container\">\r\n        <h1>{props.heading}</h1>\r\n      \r\n      <textarea style={{backgroundColor : (props.mode==='dark')?'#1b2244':(props.mode==='black')?'black':(props.mode==='green')?'green':(props.mode==='purple')?'purple':'white',\r\n                        color : props.mode==='light'?'black':'white'}} \r\n        className=\"form-control\" value={Text} placeholder=\"Type Here...\" onChange={handleOnChange} id=\"mybox\" rows=\"8\"\r\n      ></textarea>\r\n      <button className='btn btn-primary my-3' onClick={handleUpClick} >Convert to Uppercase</button>\r\n      <button className='btn btn-primary mx-2 my-3' onClick={handleLoClick} >Convert to Lowercase</button>\r\n      <button className='btn btn-danger mx-2 my-3' onClick={handleClearClick} >Clear Text</button>\r\n      <button className='btn btn-primary mx-2 my-3' onClick={handleCapClick} >Capitalize only first word</button>\r\n      <button className='btn btn-primary mx-2 my-3' onClick={handleCapEachClick} >Capitalize Each Word</button>\r\n      <button className='btn btn-primary mx-2 my-3' onClick={handleCopy} >Copy to Clipboard</button>\r\n      <button className='btn btn-primary mx-2 my-3' onClick={handleExtraSpaces} >Remove Extra Spaces</button>\r\n\r\n    </div>\r\n    <div className='container'>\r\n      <h2>Your Text Summary</h2>\r\n      <p>{Text.split(' ').length} words and {Text.length} characters</p>\r\n      <p>{0.008 * Text.split(' ').length} Minutes read</p>\r\n      <h2>Preview</h2>\r\n      <p>{Text.length>0?Text:\"Type Something in the textbox above to preview it here...\"}</p>\r\n    </div>\r\n    \r\n    </>\r\n  );\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    const capitalize=(word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1)\r\n    }\r\n    return (\r\n        \r\n        props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n            <strong>{capitalize(props.alert.type)} </strong> : {props.alert.msg} \r\n        </div>\r\n            \r\n        \r\n    )\r\n}\r\n","import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\n// import About from \"./components/About\";\nimport React, { useState } from 'react'\nimport Alert from \"./components/Alert\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState('light')\n  const [alert, setAlert] = useState(null)\n  const showAlert=(message, type)=>{\n      setAlert({\n        msg: message,\n        type: type\n      })\n      setTimeout(() => {\n        setAlert(null)\n      }, 1500);\n  }\n\n  const toggleMode=()=>{\n    if (mode!=='dark'){\n      setMode('dark')\n      document.body.style.backgroundColor = '#1b2244'\n      document.body.style.color = 'white'\n      showAlert('DarkMode is on', 'success')\n    }\n    else{\n      setMode('light')\n      document.body.style.backgroundColor = 'white'\n      document.body.style.color = 'black'\n      showAlert('DarkMode is off', 'success')\n    }\n  }\n\n  const blackTheme=()=>{\n      if (mode!=='black'){\n        setMode('black')\n        document.body.style.backgroundColor = 'black'\n        document.body.style.color = 'white'\n        showAlert('BlackTheme is applied', 'success')\n      }\n      else{\n        setMode('light')\n        document.body.style.backgroundColor = 'white'\n        document.body.style.color = 'black'\n        showAlert('BlackTheme is off', 'success')\n      }\n      \n    }\n\n    const greenTheme=()=>{if (mode!=='green'){\n      setMode('green')\n      document.body.style.backgroundColor = 'green'\n      document.body.style.color = 'white'\n      showAlert('GreenTheme is applied', 'success')\n    }\n    else{\n      setMode('light')\n      document.body.style.backgroundColor = 'white'\n      document.body.style.color = 'black'\n      showAlert('GreenTheme is off', 'success')\n    }\n    }\n\n    const purpleTheme=()=>{if (mode!=='purple'){\n      setMode('purple')\n      document.body.style.backgroundColor = 'purple'\n      document.body.style.color = 'white'\n      showAlert('PurpleTheme is applied', 'success')\n    }\n    else{\n      setMode('light')\n      document.body.style.backgroundColor = 'white'\n      document.body.style.color = 'black'\n      showAlert('PurpleTheme is off', 'success')\n    }\n    }\n\n  \n\n  return (\n    <>\n    {/* <Router> */}\n      <Navbar title=\"TextUtilsBlog\" aboutText=\"About TextUtils\" toggleMode={toggleMode} mode={mode} blackTheme={blackTheme} greenTheme={greenTheme} purpleTheme={purpleTheme} />\n      <Alert alert={alert} />\n      {/* <Switch>\n          <Route exact path=\"/about\">\n            <About />\n          </Route>\n          \n          <Route exact path=\"/\"> */}\n          <TextForm heading=\"Enter Your Text Here to Analyze...\" mode={mode} showAlert={showAlert} />\n          {/* </Route>\n        </Switch> */}\n      {/* <TextForm heading=\"Enter Your Text Here to Analyze...\" mode={mode} showAlert={showAlert} /> */}\n      {/* <About/> */}\n      {/* </Router> */}\n      </>\n  );\n  \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}